{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://universal-parsing-language.org/schema/json/v0/selector-transformation.schema.json",
    "properties": {
        "type": {
            "type": "string",
            "enum": [
                "text",
                "to-lower",
                "to-upper",
                "decorate",
                "regexp-replacement"
            ]
        },
        "extra": {
            "type": "object",
            "description": "Values needed to apply the transformation for the desired type."
        }
    },
    "allOf": [
        {
            "if": {
                "properties": {
                    "type": {
                        "const": "decorate"
                    }
                }
            },
            "then": {
                "properties": {
                    "extra": {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "string",
                                "pattern": "\\$s"
                            }
                        },
                        "required": [
                            "value"
                        ]
                    }
                },
                "required": [
                    "type",
                    "extra"
                ]
            }
        },
        {
            "if": {
                "properties": {
                    "type": {
                        "const": "regexp-replacement"
                    }
                }
            },
            "then": {
                "properties": {
                    "extra": {
                        "type": "object",
                        "properties": {
                            "delimiter": {
                                "type": "string",
                                "description": "Delimiter to be used, useful to avoid to scape characters depending of your regexp. Default '/'",
                                "pattern": "^.$"
                            },
                            "regexp": {
                                "type": "string",
                                "description": "A valid regexp without delimiters"
                            },
                            "replacement": {
                                "type": "string",
                                "description": "Replacement to apply to the full match of the regexp. Use $ followed by an integer to use this capture group on the final result"
                            }
                        },
                        "required": [
                            "regexp",
                            "replacement"
                        ]
                    }
                },
                "required": [
                    "type",
                    "extra"
                ]
            }
        }
    ],
    "required": [
        "type"
    ]
}